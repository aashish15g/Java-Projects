#BlueJ class context
comment0.target=PostMonitor
comment0.text=\r\n\ \ The\ postMonitor\ class\ which\ was\ made\ with\ the\ purpose\ to\ monitor\ \r\n\ \ and\ keep\ information\ about\ the\ posts.\r\n\r\n\ \ @author\ Aashish\ Ganeshkumar\ (906370814)\r\n\ \ @version\ (2022.03.04)\r\n
comment1.params=
comment1.target=PostMonitor()
comment1.text=\r\n\ Initializes\ a\ newly\ created\ PostMonitor\ object.\r\n
comment10.params=
comment10.target=int\ getSlowestHour()
comment10.text=\r\n\ This\ method\ takes\ no\ parameters\ and\ returns\ an\ integer\ \r\n\ representing\ the\ hour\ (0-23)\ with\ the\ smallest\ count.\ You\ can\ \r\n\ implement\ it\ in\ one\ line\ like\ before.\r\n\ @return\ Returns\ the\ lowest\ hour\ count.\r\n
comment11.params=
comment11.target=int\ getSlowestDay()
comment11.text=\r\n\ This\ method\ takes\ no\ parameters\ and\ returns\ an\ integer\ representing\ \r\n\ the\ day\ (0-6)\ with\ the\ smallest\ count.\ You\ can\ also\ implement\ this\ \r\n\ in\ one\ line.\r\n\ @return\ Returns\ the\ smallest\ count.\r\n
comment2.params=
comment2.target=int\ getPostCount()
comment2.text=\r\n\ Getter\ method\ which\ returns\ postCount.\r\n\ @return\ Returns\ postCount.\r\n
comment3.params=
comment3.target=int[]\ getHourCounts()
comment3.text=\r\n\ Getter\ method\ which\ shows\ us\ the\ hourCounts/\r\n\ @return\ Returns\ the\ hourCounts.\r\n
comment4.params=
comment4.target=int[]\ getDayCounts()
comment4.text=\r\n\ Getter\ method\ which\ shows\ us\ the\ getDayCounts\ array.\r\n\ @return\ Returns\ the\ getDayCounts\ array.\r\n
comment5.params=posted
comment5.target=void\ recordPost(Post)
comment5.text=\r\n\ This\ method\ takes\ a\ single\ Post\ as\ a\ parameter.\ It\ does\ not\ \r\n\ return\ a\ value.\ It\ "records"\ seeing\ the\ post\ by\ incrementing\ \r\n\ the\ hour\ count\ for\ the\ hour\ when\ the\ post\ was\ published,\ and\ also\ \r\n\ incrementing\ the\ day\ count\ for\ the\ day\ when\ the\ post\ was\ published.\ \r\n\ It\ also\ increments\ the\ post\ count.\r\n\ @param\ posted\ Thee\ param\ taken\ from\ the\ other\ class.\r\n
comment6.params=array
comment6.target=int\ getIndexOfLargest(int[])
comment6.text=\r\n\ This\ method\ takes\ an\ integer\ array\ as\ a\ parameter\ and\ returns\ an\ \r\n\ integer\ representing\ the\ index\ (position)\ in\ the\ array\ where\ the\ \r\n\ largest\ value\ in\ the\ array\ appears.\ \r\n\ @param\ array\ The\ parameter\ that\ takes\ in\ an\ array\ and\ looks\ for\ the\ \r\n\ largest\ int\ value.\r\n\ @return\ Returns\ the\ largest\ array\ number.\r\n
comment7.params=
comment7.target=int\ getBusiestHour()
comment7.text=\r\n\ This\ method\ takes\ no\ parameters\ and\ returns\ an\ integer\ \r\n\ representing\ the\ hour\ (0-23)\ with\ the\ largest\ count.\ You\ can\ \r\n\ implement\ it\ in\ one\ line\ using\ getIndexOfLargest().\r\n\ @return\ Returns\ the\ biggest\ hour\ count.\r\n
comment8.params=
comment8.target=int\ getBusiestDay()
comment8.text=\r\n\ This\ method\ takes\ no\ parameters\ and\ returns\ an\ integer\ \r\n\ representing\ the\ day\ (0-6)\ with\ the\ largest\ count.\ You\ can\ also\ \r\n\ implement\ this\ in\ one\ line.\r\n\ @return\ Returns\ the\ biggest\ day\ count.\r\n
comment9.params=array
comment9.target=int\ getIndexOfSmallest(int[])
comment9.text=\r\n\ This\ method\ takes\ an\ integer\ array\ as\ a\ parameter\ and\ returns\ an\ \r\n\ integer\ representing\ the\ index\ (position)\ in\ the\ array\ where\ the\ \r\n\ smallest\ value\ in\ the\ array\ appears.\ To\ implement\ this\ method,\ \r\n\ you\ can\ use\ the\ same\ techniques\ as\ for\ getIndexOfLargest().\ If\ \r\n\ more\ than\ one\ array\ slot\ contains\ the\ same\ smallest\ value,\ \r\n\ return\ the\ lowest\ index\ with\ that\ value\ \r\n\ (the\ first\ one\ found,\ if\ searching\ from\ the\ beginning\ of\ the\ array)\r\n\ @param\ array\ Parameter\ that\ looks\ through\ the\ array\ for\ the\ \r\n\ smallest\ number.\r\n\ @return\ Returns\ the\ smallest\ array\ number.\r\n
numComments=12
